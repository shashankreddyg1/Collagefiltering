{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\apipython\\\\frontend\\\\collage\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [colleges, setColleges] = useState([]);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState({\n    name: '',\n    city: '',\n    year: '',\n    state: '',\n    facility: ''\n  });\n\n  // Function to fetch colleges based on query parameter\n  const fetchColleges = async (param, type) => {\n    setError(null); // Reset error on new search\n    let url = `http://localhost:5000/${type}?${type}=${param}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (response.ok) {\n        setColleges(data); // Update the colleges state with the result\n      } else {\n        setError(data.error); // Set error message from API\n      }\n    } catch (error) {\n      setError('Error fetching data');\n    }\n  };\n\n  // useEffect to handle fetching based on query\n  useEffect(() => {\n    if (query.name) {\n      fetchColleges(query.name, 'college');\n    } else if (query.city) {\n      fetchColleges(query.city, 'city');\n    } else if (query.year) {\n      fetchColleges(query.year, 'year');\n    } else if (query.state) {\n      fetchColleges(query.state, 'state');\n    } else if (query.facility) {\n      fetchColleges(query.facility, 'facilities');\n    } else {\n      setColleges([]);\n      setError(null);\n    }\n  }, [query]); // Runs when query changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"College Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by college name\",\n        value: query.name,\n        onChange: e => setQuery({\n          ...query,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by city\",\n        value: query.city,\n        onChange: e => setQuery({\n          ...query,\n          city: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by year founded\",\n        value: query.year,\n        onChange: e => setQuery({\n          ...query,\n          year: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by state\",\n        value: query.state,\n        onChange: e => setQuery({\n          ...query,\n          state: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by facility\",\n        value: query.facility,\n        onChange: e => setQuery({\n          ...query,\n          facility: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), colleges.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: colleges.map((college, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: college.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year Founded: \", college.year_founded]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"City: \", college.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", college.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Facilities: \", college.facilities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No colleges found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8OQon3ZnuZkiTqZSJs6JMsgYTGk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","colleges","setColleges","error","setError","query","setQuery","name","city","year","state","facility","fetchColleges","param","type","url","response","fetch","data","json","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","color","length","map","college","index","year_founded","facilities","_c","$RefreshReg$"],"sources":["C:/Users/shash/OneDrive/Desktop/apipython/frontend/collage/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [colleges, setColleges] = useState([]);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState({\n    name: '',\n    city: '',\n    year: '',\n    state: '',\n    facility: ''\n  });\n\n  // Function to fetch colleges based on query parameter\n  const fetchColleges = async (param, type) => {\n    setError(null); // Reset error on new search\n    let url = `http://localhost:5000/${type}?${type}=${param}`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (response.ok) {\n        setColleges(data);  // Update the colleges state with the result\n      } else {\n        setError(data.error); // Set error message from API\n      }\n    } catch (error) {\n      setError('Error fetching data');\n    }\n  };\n\n  // useEffect to handle fetching based on query\n  useEffect(() => {\n    if (query.name) {\n      fetchColleges(query.name, 'college');\n    } else if (query.city) {\n      fetchColleges(query.city, 'city');\n    } else if (query.year) {\n      fetchColleges(query.year, 'year');\n    } else if (query.state) {\n      fetchColleges(query.state, 'state');\n    } else if (query.facility) {\n      fetchColleges(query.facility, 'facilities');\n    } else {\n      setColleges([]);\n      setError(null);\n    }\n  }, [query]); // Runs when query changes\n\n  return (\n    <div className=\"App\">\n      <h1>College Search</h1>\n\n      {/* Input Fields */}\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search by college name\"\n          value={query.name}\n          onChange={(e) => setQuery({ ...query, name: e.target.value })}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search by city\"\n          value={query.city}\n          onChange={(e) => setQuery({ ...query, city: e.target.value })}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search by year founded\"\n          value={query.year}\n          onChange={(e) => setQuery({ ...query, year: e.target.value })}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search by state\"\n          value={query.state}\n          onChange={(e) => setQuery({ ...query, state: e.target.value })}\n        />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search by facility\"\n          value={query.facility}\n          onChange={(e) => setQuery({ ...query, facility: e.target.value })}\n        />\n      </div>\n\n      {/* Display Errors */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Display Colleges */}\n      {colleges.length > 0 ? (\n        <ul>\n          {colleges.map((college, index) => (\n            <li key={index}>\n              <strong>{college.name}</strong>\n              <p>Year Founded: {college.year_founded}</p>\n              <p>City: {college.city}</p>\n              <p>State: {college.state}</p>\n              <p>Facilities: {college.facilities}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No colleges found</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}